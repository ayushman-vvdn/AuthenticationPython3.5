"""
Django settings for tutorial project.

Generated by 'django-admin startproject' using Django 1.11.12.

For more information on this file, see
https://docs.djangoproject.com/en/1.11/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/1.11/ref/settings/
"""

import os
import datetime
# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))

APPEND_SLASH=False
# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/1.11/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = '-t0c5!oye4m*ep^z%21z)klna2i)01&za%y6(y0u7&7g*+3cgz'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = ["13.232.35.140", "*"]
API_DOMAIN = "http://localhost"

# login through oauth
REDIRECT_URL = 'http://localhost:8041/admin/'

# Application definition
INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'rest_framework',
    'oauth2_provider',
    'corsheaders',
    'accounts',
    'generic',
    'services',
]


REST_FRAMEWORK = {
    'DEFAULT_AUTHENTICATION_CLASSES': (
        'oauth2_provider.contrib.rest_framework.OAuth2Authentication',
        #'rest_framework_social_oauth2.authentication.SocialAuthentication',  # for Social authentication
    ),
    'DEFAULT_RENDERER_CLASSES': (
        'rest_framework.renderers.JSONRenderer',
    )
}

AUTHENTICATION_BACKENDS = (
    'oauth2_provider.backends.OAuth2Backend',
    'django.contrib.auth.backends.ModelBackend',  # this is to access the admin site
    #'social_core.backends.google.GoogleOAuth2',  # for google oauth2
    #'rest_framework_social_oauth2.backends.DjangoOAuth2',  # oauth2 by rest_framework  NOT required as we
    #  already have out OAUTH implemented

    # For Facebook authentication
    #'social_core.backends.facebook.FacebookAppOAuth2',
    #'social_core.backends.facebook.FacebookOAuth2',
)

SITE_ID = 1

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    'corsheaders.middleware.CorsMiddleware',
    'oauth2_provider.middleware.OAuth2TokenMiddleware',
]

ROOT_URLCONF = 'idfi_ibms.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'idfi_ibms.wsgi.application'


# Database
# https://docs.djangoproject.com/en/1.11/ref/settings/#databases

DATABASES = {
    'default': {
        # 'ENGINE': 'django.db.backends.postgresql_psycopg2',
        'ENGINE': 'django.db.backends.mysql',
        'NAME': 'idfi_ibms',
        'USER': 'root',
        'PASSWORD': 'root',
        'HOST': 'localhost',
        'PORT': '5432',
    }
}


# Password validation
# https://docs.djangoproject.com/en/1.11/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/1.11/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'Asia/Kolkata'

USE_I18N = True

USE_L10N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/1.11/howto/static-files/
PROJECT_ROOT = os.path.normpath(os.path.dirname(__file__))
STATIC_ROOT = os.path.join(PROJECT_ROOT, 'static')
STATIC_URL = '/static/'

# CORS settings
CORS_ORIGIN_ALLOW_ALL = True
CORS_ALLOW_METHODS = [
    'GET',
    'OPTIONS',
    'POST',
    'PUT',
]

CORS_ALLOW_HEADERS = [
    'accept',
    'accept-encoding',
    'authorization',
    'content-type',
    'dnt',
    'origin',
    'user-agent',
    'x-csrftoken',
    'x-requested-with',
    'SessionId',
    'Credential',
    'x_amz_date',
    'x_amz_signature',
    'x_amz_algorithm',
    'AWS_S3_BUCKET_URL',
    'AWS_ACCESS_KEY_ID',
    'x_amz_credential',
    'signature',
    'x_amz_algorithm',
    'key',
    'policy',
    'upload_url',
    'link',

]

CORS_EXPOSE_HEADERS = ['authorization', 'SessionId', 'Credential', 'x_amz_date', 'x_amz_signature', 'x_amz_algorithm',
                       'AWS_S3_BUCKET_URL', 'AWS_ACCESS_KEY_ID', 'x_amz_credential', 'signature', 'x_amz_algorithm',
                       'key', 'policy', 'upload_url', 'link']
# The oauth2_provider configurations
OAUTH2_PROVIDER = {
    'SCOPES': {
        "delete_tag": "Delete the tag",
        "create_tag": "Create the tag",
        "update_tag": "Update the tag",
    },
    'AUTH_USER_MODEL': 'auth.user',
    'ACCESS_TOKEN_EXPIRE_SECONDS': 2592000  # 30 Days = 30*24*60*60
}
OAUTH2_PROVIDER_APPLICATION_MODEL = 'oauth2_provider.Application'

# S3 AWS Settings
FILE_SIZE = 7340032
STATICFILES_LOCATION = 'static'
MEDIAFILES_LOCATION = 'media'



